@model SoftUniFinalProject.Core.Models.Event.AllEventsQueryModel
@using static SoftUniFinalProject.Core.Constants.RoleConstants;
@{ 
     ViewBag.Title = "All Events"; 
}
<h2 class="text-center">@ViewBag.Title</h2>
<hr /> 
<form asp-action="All" method="get">
    <div class="row">
        <div class="form-group col-md-3">
            <label asp-for="SearchTerm" style="margin-bottom:8px"></label>
                <input asp-for="SearchTerm" class="form-control" placeholder="Search By Name,Description and Location">
        </div> 
        <div class="form-group col-md-3">
                <div class="form-group"> 
                    <label asp-for="Sorting" style="margin-bottom:8px">
                    </label> <select asp-for="Sorting" class="form-control">
                        <option value="0">Soonest</option>
                        <option value="1">Location</option>
                        <option value="2">AttendanceMost</option>
               </select>
                </div>
        </div> 
        <div class="col-md-3"> 
                <div class="form-group mt-4 p-2">
                <input type="submit" value="Search" class="btn btn-style" />
                    @if(User.IsInRole(AdministratorRole))
                    {
                    <a class="btn btn-style" asp-action="Create" asp-area="Admin" asp-controller="Event">Create Event</a>
                    }
                </div> 
        </div> 
    </div> 
</form>
@{
   var previousPage = Model.CurrentPage - 1;
   if
   (previousPage < 1)
   {
       previousPage = 1; 
   }
   var maxPage = Math.Ceiling((double)Model.TotalEventsCount / Model.EventsPerPage);
} 
    <div class="row mb-5"> 
        <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-start">
        <a class="btn btn-style @(Model.CurrentPage == 1 ? "disabled" : string.Empty)"
            asp-controller="Event" 
            asp-action="All"
            asp-route-currentPage="@previousPage"
            asp-route-searchTerm="@Model.SearchTerm"
            asp-route-sorting="@((int)Model.Sorting)"><<</a>
        </div>
    @{
        var shouldButtonBeDisabled = Model.CurrentPage == maxPage || !Model.Events.Any();
    }
       <div class="col-md-6 d-grid gap-2 d-md-flex justify-content-md-end">
        <a class="btn btn-style
              @(shouldButtonBeDisabled ? "disabled" : string.Empty)" 
           asp-controller="Event" 
           asp-action="All" 
           asp-route-currentPage="@(Model.CurrentPage + 1)"
           asp-route-searchTerm="@Model.SearchTerm"
           asp-route-sorting="@((int)Model.Sorting)">>></a>
       </div> 
    </div>
    @if (!Model.Events.Any())
    { 
        <h2 class="text-center">No Events found by the given criteria!</h2>
    } 
    <div style="display:flex; justify-content: space-evenly;" class="row"> 
        @foreach (var eventView in Model.Events)
        {
       <partial name="_EventPartial" model="@eventView" />
   }
    </div>